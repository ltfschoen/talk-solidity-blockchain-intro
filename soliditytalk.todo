Slide deck:
 ☐ resolve issue with content classes breaking nested templates or code blocks depending on workaround
 ☐ cite quotes
 ☐ setup script for cloning libraries: get-example-libs.sh
 ☐ finish syntax def

Content:
 ☐ go through todos, work out images & demo code needed:
 ☐ images:
   ☐ <!--pic01--> chain / EVM / solidity system diagram
   ☐ <!--picRT--> storage/ref types onchain/inEVM location pic
     ☐ include where context coercion happens
   ☐ <!--picABI--> ABI/Solidity contract interfaces diagram
 ☐ verify stuff:
   ☐ check bit math for manipulating byte arrays
   ☐ check to see if odd-sized things like `bytes3` are things and if `bytes33` and above are (change types docs if so)
   ☐ write test code to explain behaviour of function `storage` vars (persist after transaction?)
   ☐ check that fallbacks are always public
 ☐ demo code:
   ☐ saving some data using web stack vs ethereum
   ☐ finish Set library example
   ☐ address typecasting
   ☐ modifiers for collapsing function conditions
   ☐ passing a string over the ABI
   ☐ audit function libraries and pull / link useful ones
     - ABI encoders / decoders
     - ADTs along the lines of the C STL
 ☐ filler:
   ☐ "Best places to get started"
   ☐ "A blockchain is not always the answer"
   ☐ types intro


Research:
 ☐ go through Eris tutorial info
 ☐ unanswered questions:
   ☐ make some inter-contract method calls and see what the caveats are
   ☐ deploy another DAO on the testnet, wipe it from Mix, attempt to make a contract that creates new instances of it
   - Test if/how fixed point rounding works
 - Design patterns
   - http://solidity.readthedocs.io/en/latest/common-patterns.html
 - Unit testing:
   [Find a framework that outputs useful benchmarking data]
   ☐ get dapple setup and see how unit testing operates
   - gas cost (indicator of computational complexity / electrical cost; estimated and actual)
   - memory & storage usage (indicator of long-term storage efficiency)
   - See if sol-unit / sunit is runnable and try to plug something in to it
 - Benchmark various techniques to work out what's best
   At what rate does gas cost increase? In proportion to what?
   ☐ gas costs for storage manipulation: multiple mods vs single mod vs memory copy mod & replace
   ☐ gas costs for internal, external & library function calls
   ☐ gas costs for internal & external self / parent / ancestor / multiparent lookups
   ☐ storage size of dynamic arrays with different int sizes for elements (is each slot padded to 256 bits?)
   - Understand inheritance: concatenative or delegative?
   - see what happens when you try to run a function on a user account address

 ☐ Is it possible, or will it be possible, to bind Solidity types and contract source code to bytecode for debugging purposes, for external contracts someday? or now? can i hack mix?
 ☐ investigate generation of call-flow graphs

 - Interfacing with IPFS?

Useful services:
  - Ethereum alarm clock
  - RANDAO https://github.com/randao/randao
